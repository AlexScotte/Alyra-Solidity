{
	"id": "dff62b107fdf6e784bbbb6ec110bb0a8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/voting-system/voting.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract voting is Ownable{\r\n\r\n    // uint256 private winningProposalId;\r\n\r\n    event VoterRegistered(address voterAddress); \r\n    event WorkflowStatusChange(WorkflowStatus previousStatus, WorkflowStatus newStatus);\r\n    event ProposalRegistered(uint proposalId);\r\n    event Voted (address voter, uint proposalId);\r\n\r\n    enum WorkflowStatus {\r\n        RegisteringVoters,\r\n        ProposalsRegistrationStarted,\r\n        ProposalsRegistrationEnded,\r\n        VotingSessionStarted,\r\n        VotingSessionEnded,\r\n        VotesTallied\r\n    }\r\n\r\n    struct Voter {\r\n        bool isRegistered;\r\n        bool hasVoted;\r\n        uint votedProposalId;\r\n    }\r\n\r\n    struct Proposal {\r\n        string description;\r\n        uint voteCount;\r\n    }\r\n\r\n    mapping(address => bool) voterWhitelist;\r\n    uint private _voterWhitelistedCount = 0;\r\n\r\n    mapping(address => Proposal) voterProposals;\r\n    \r\n    function adminWhitelist(address _addrVoter) external onlyOwner{\r\n\r\n        // TODO: can whitelist the admin ? \r\n\r\n\r\n        require(!voterWhitelist[_addrVoter], \"The voter is already whitelisted.\");\r\n\r\n        voterWhitelist[_addrVoter] = true;\r\n        _voterWhitelistedCount++;\r\n        emit VoterRegistered(_addrVoter);\r\n    }\r\n\r\n    function adminStartProposalsSession() external onlyOwner{\r\n\r\n        require(_voterWhitelistedCount > 1, \"Need at least 2 whitelisted voter to start a proposal session.\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function voterProposal(string calldata _description) external {\r\n        \r\n        require(voterWhitelist[msg.sender], \"The voter must be whitelisted to make a proposal.\");\r\n\r\n        // One proposal only ? if yes add require\r\n\r\n        voterProposals[msg.sender] = Proposal(_description, 0);\r\n\r\n        // TODO:\r\n        // emit ProposalRegistered();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function getWinner() public {\r\n\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/voting-system/voting.sol": {
				"voting": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voterAddress",
									"type": "address"
								}
							],
							"name": "VoterRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum voting.WorkflowStatus",
									"name": "previousStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum voting.WorkflowStatus",
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "WorkflowStatusChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "adminStartProposalsSession",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addrVoter",
									"type": "address"
								}
							],
							"name": "adminWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWinner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_description",
									"type": "string"
								}
							],
							"name": "voterProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/voting-system/voting.sol\":169:2009  contract voting is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/voting-system/voting.sol\":995:996  0 */\n  0x00\n    /* \"contracts/voting-system/voting.sol\":957:996  uint private _voterWhitelistedCount = 0 */\n  0x02\n  sstore\n    /* \"contracts/voting-system/voting.sol\":169:2009  contract voting is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/voting-system/voting.sol\":169:2009  contract voting is Ownable{... */\n  jump(tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/voting-system/voting.sol\":169:2009  contract voting is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/voting-system/voting.sol\":169:2009  contract voting is Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8e7ea5b2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9e95dd3f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x43e20a1d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7669d79e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/voting-system/voting.sol\":1061:1390  function adminWhitelist(address _addrVoter) external onlyOwner{... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/voting-system/voting.sol\":1398:1580  function adminStartProposalsSession() external onlyOwner{... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/voting-system/voting.sol\":1968:2006  function getWinner() public {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/voting-system/voting.sol\":1592:1950  function voterProposal(string calldata _description) external {... */\n    tag_8:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/voting-system/voting.sol\":1061:1390  function adminWhitelist(address _addrVoter) external onlyOwner{... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_33:\n        /* \"contracts/voting-system/voting.sol\":1194:1208  voterWhitelist */\n      0x01\n        /* \"contracts/voting-system/voting.sol\":1194:1220  voterWhitelist[_addrVoter] */\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1209:1219  _addrVoter */\n      dup3\n        /* \"contracts/voting-system/voting.sol\":1194:1220  voterWhitelist[_addrVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/voting-system/voting.sol\":1193:1220  !voterWhitelist[_addrVoter] */\n      iszero\n        /* \"contracts/voting-system/voting.sol\":1185:1258  require(!voterWhitelist[_addrVoter], \"The voter is already whitelisted.\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/voting-system/voting.sol\":1300:1304  true */\n      0x01\n        /* \"contracts/voting-system/voting.sol\":1271:1285  voterWhitelist */\n      dup1\n        /* \"contracts/voting-system/voting.sol\":1271:1297  voterWhitelist[_addrVoter] */\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1286:1296  _addrVoter */\n      dup4\n        /* \"contracts/voting-system/voting.sol\":1271:1297  voterWhitelist[_addrVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1271:1304  voterWhitelist[_addrVoter] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/voting-system/voting.sol\":1315:1337  _voterWhitelistedCount */\n      0x02\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1315:1339  _voterWhitelistedCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/voting-system/voting.sol\":1355:1382  VoterRegistered(_addrVoter) */\n      0xb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd\n        /* \"contracts/voting-system/voting.sol\":1371:1381  _addrVoter */\n      dup2\n        /* \"contracts/voting-system/voting.sol\":1355:1382  VoterRegistered(_addrVoter) */\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/voting-system/voting.sol\":1061:1390  function adminWhitelist(address _addrVoter) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/voting-system/voting.sol\":1398:1580  function adminStartProposalsSession() external onlyOwner{... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/voting-system/voting.sol\":1500:1501  1 */\n      0x01\n        /* \"contracts/voting-system/voting.sol\":1475:1497  _voterWhitelistedCount */\n      sload(0x02)\n        /* \"contracts/voting-system/voting.sol\":1475:1501  _voterWhitelistedCount > 1 */\n      gt\n        /* \"contracts/voting-system/voting.sol\":1467:1568  require(_voterWhitelistedCount > 1, \"Need at least 2 whitelisted voter to start a proposal session.\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/voting-system/voting.sol\":1398:1580  function adminStartProposalsSession() external onlyOwner{... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/voting-system/voting.sol\":1968:2006  function getWinner() public {... */\n    tag_24:\n      jump\t// out\n        /* \"contracts/voting-system/voting.sol\":1592:1950  function voterProposal(string calldata _description) external {... */\n    tag_28:\n        /* \"contracts/voting-system/voting.sol\":1683:1697  voterWhitelist */\n      0x01\n        /* \"contracts/voting-system/voting.sol\":1683:1709  voterWhitelist[msg.sender] */\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1698:1708  msg.sender */\n      caller\n        /* \"contracts/voting-system/voting.sol\":1683:1709  voterWhitelist[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/voting-system/voting.sol\":1675:1763  require(voterWhitelist[msg.sender], \"The voter must be whitelisted to make a proposal.\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"contracts/voting-system/voting.sol\":1858:1883  Proposal(_description, 0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/voting-system/voting.sol\":1867:1879  _description */\n      dup4\n      dup4\n        /* \"contracts/voting-system/voting.sol\":1858:1883  Proposal(_description, 0) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/voting-system/voting.sol\":1881:1882  0 */\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1858:1883  Proposal(_description, 0) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/voting-system/voting.sol\":1829:1843  voterProposals */\n      0x03\n        /* \"contracts/voting-system/voting.sol\":1829:1855  voterProposals[msg.sender] */\n      0x00\n        /* \"contracts/voting-system/voting.sol\":1844:1854  msg.sender */\n      caller\n        /* \"contracts/voting-system/voting.sol\":1829:1855  voterProposals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/voting-system/voting.sol\":1829:1883  voterProposals[msg.sender] = Proposal(_description, 0) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/voting-system/voting.sol\":1592:1950  function voterProposal(string calldata _description) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_60:\n      dup3\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_80\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_79)\n    tag_80:\n      dup3\n      0x1f\n      lt\n      tag_81\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_79)\n    tag_81:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_79\n      jumpi\n      swap2\n      dup3\n      add\n    tag_82:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_82)\n    tag_83:\n    tag_79:\n      pop\n      swap1\n      pop\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      pop\n      swap1\n      jump\t// out\n    tag_85:\n    tag_86:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_86)\n    tag_87:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_89:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_90:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_91:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_92:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_120\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_91\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_93:\n        /* \"#utility.yul\":641:665   */\n      tag_122\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_92\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_123\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_123:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_94:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_125\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_93\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_128\n      tag_89\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":917:1036   */\n    tag_127:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_129\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_94\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_95:\n        /* \"#utility.yul\":1263:1287   */\n      tag_131\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_92\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_22:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_133\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1645   */\n    tag_96:\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      dup1\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1651:1768   */\n    tag_97:\n        /* \"#utility.yul\":1760:1761   */\n      0x00\n        /* \"#utility.yul\":1757:1758   */\n      dup1\n        /* \"#utility.yul\":1750:1762   */\n      revert\n        /* \"#utility.yul\":1774:1891   */\n    tag_98:\n        /* \"#utility.yul\":1883:1884   */\n      0x00\n        /* \"#utility.yul\":1880:1881   */\n      dup1\n        /* \"#utility.yul\":1873:1885   */\n      revert\n        /* \"#utility.yul\":1911:2464   */\n    tag_99:\n        /* \"#utility.yul\":1969:1977   */\n      0x00\n        /* \"#utility.yul\":1979:1985   */\n      dup1\n        /* \"#utility.yul\":2029:2032   */\n      dup4\n        /* \"#utility.yul\":2022:2026   */\n      0x1f\n        /* \"#utility.yul\":2014:2020   */\n      dup5\n        /* \"#utility.yul\":2010:2027   */\n      add\n        /* \"#utility.yul\":2006:2033   */\n      slt\n        /* \"#utility.yul\":1996:2118   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2037:2116   */\n      tag_139\n      tag_96\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1996:2118   */\n    tag_138:\n        /* \"#utility.yul\":2150:2156   */\n      dup3\n        /* \"#utility.yul\":2137:2157   */\n      calldataload\n        /* \"#utility.yul\":2127:2157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2180:2198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2172:2178   */\n      dup2\n        /* \"#utility.yul\":2169:2199   */\n      gt\n        /* \"#utility.yul\":2166:2283   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2202:2281   */\n      tag_141\n      tag_97\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2166:2283   */\n    tag_140:\n        /* \"#utility.yul\":2316:2320   */\n      0x20\n        /* \"#utility.yul\":2308:2314   */\n      dup4\n        /* \"#utility.yul\":2304:2321   */\n      add\n        /* \"#utility.yul\":2292:2321   */\n      swap2\n      pop\n        /* \"#utility.yul\":2370:2373   */\n      dup4\n        /* \"#utility.yul\":2362:2366   */\n      0x01\n        /* \"#utility.yul\":2354:2360   */\n      dup3\n        /* \"#utility.yul\":2350:2367   */\n      mul\n        /* \"#utility.yul\":2340:2348   */\n      dup4\n        /* \"#utility.yul\":2336:2368   */\n      add\n        /* \"#utility.yul\":2333:2374   */\n      gt\n        /* \"#utility.yul\":2330:2458   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2377:2456   */\n      tag_143\n      tag_98\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2330:2458   */\n    tag_142:\n        /* \"#utility.yul\":1911:2464   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2470:2999   */\n    tag_27:\n        /* \"#utility.yul\":2541:2547   */\n      0x00\n        /* \"#utility.yul\":2549:2555   */\n      dup1\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2586:2595   */\n      dup4\n        /* \"#utility.yul\":2577:2584   */\n      dup6\n        /* \"#utility.yul\":2573:2596   */\n      sub\n        /* \"#utility.yul\":2569:2601   */\n      slt\n        /* \"#utility.yul\":2566:2685   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2604:2683   */\n      tag_146\n      tag_89\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2566:2685   */\n    tag_145:\n        /* \"#utility.yul\":2752:2753   */\n      0x00\n        /* \"#utility.yul\":2741:2750   */\n      dup4\n        /* \"#utility.yul\":2737:2754   */\n      add\n        /* \"#utility.yul\":2724:2755   */\n      calldataload\n        /* \"#utility.yul\":2782:2800   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2774:2780   */\n      dup2\n        /* \"#utility.yul\":2771:2801   */\n      gt\n        /* \"#utility.yul\":2768:2885   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2804:2883   */\n      tag_148\n      tag_90\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2768:2885   */\n    tag_147:\n        /* \"#utility.yul\":2917:2982   */\n      tag_149\n        /* \"#utility.yul\":2974:2981   */\n      dup6\n        /* \"#utility.yul\":2965:2971   */\n      dup3\n        /* \"#utility.yul\":2954:2963   */\n      dup7\n        /* \"#utility.yul\":2950:2972   */\n      add\n        /* \"#utility.yul\":2917:2982   */\n      tag_99\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2899:2982   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2695:2992   */\n      pop\n        /* \"#utility.yul\":2470:2999   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3005:3174   */\n    tag_100:\n        /* \"#utility.yul\":3089:3100   */\n      0x00\n        /* \"#utility.yul\":3123:3129   */\n      dup3\n        /* \"#utility.yul\":3118:3121   */\n      dup3\n        /* \"#utility.yul\":3111:3130   */\n      mstore\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3158:3161   */\n      dup3\n        /* \"#utility.yul\":3154:3168   */\n      add\n        /* \"#utility.yul\":3139:3168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3005:3174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3180:3400   */\n    tag_101:\n        /* \"#utility.yul\":3320:3354   */\n      0x54686520766f74657220697320616c72656164792077686974656c6973746564\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3308:3314   */\n      dup3\n        /* \"#utility.yul\":3304:3318   */\n      add\n        /* \"#utility.yul\":3297:3355   */\n      mstore\n        /* \"#utility.yul\":3389:3392   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3384:3386   */\n      0x20\n        /* \"#utility.yul\":3376:3382   */\n      dup3\n        /* \"#utility.yul\":3372:3387   */\n      add\n        /* \"#utility.yul\":3365:3393   */\n      mstore\n        /* \"#utility.yul\":3180:3400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3406:3772   */\n    tag_102:\n        /* \"#utility.yul\":3548:3551   */\n      0x00\n        /* \"#utility.yul\":3569:3636   */\n      tag_153\n        /* \"#utility.yul\":3633:3635   */\n      0x21\n        /* \"#utility.yul\":3628:3631   */\n      dup4\n        /* \"#utility.yul\":3569:3636   */\n      tag_100\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3562:3636   */\n      swap2\n      pop\n        /* \"#utility.yul\":3645:3738   */\n      tag_154\n        /* \"#utility.yul\":3734:3737   */\n      dup3\n        /* \"#utility.yul\":3645:3738   */\n      tag_101\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3763:3765   */\n      0x40\n        /* \"#utility.yul\":3758:3761   */\n      dup3\n        /* \"#utility.yul\":3754:3766   */\n      add\n        /* \"#utility.yul\":3747:3766   */\n      swap1\n      pop\n        /* \"#utility.yul\":3406:3772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3778:4197   */\n    tag_38:\n        /* \"#utility.yul\":3944:3948   */\n      0x00\n        /* \"#utility.yul\":3982:3984   */\n      0x20\n        /* \"#utility.yul\":3971:3980   */\n      dup3\n        /* \"#utility.yul\":3967:3985   */\n      add\n        /* \"#utility.yul\":3959:3985   */\n      swap1\n      pop\n        /* \"#utility.yul\":4031:4040   */\n      dup2\n        /* \"#utility.yul\":4025:4029   */\n      dup2\n        /* \"#utility.yul\":4021:4041   */\n      sub\n        /* \"#utility.yul\":4017:4018   */\n      0x00\n        /* \"#utility.yul\":4006:4015   */\n      dup4\n        /* \"#utility.yul\":4002:4019   */\n      add\n        /* \"#utility.yul\":3995:4042   */\n      mstore\n        /* \"#utility.yul\":4059:4190   */\n      tag_156\n        /* \"#utility.yul\":4185:4189   */\n      dup2\n        /* \"#utility.yul\":4059:4190   */\n      tag_102\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4051:4190   */\n      swap1\n      pop\n        /* \"#utility.yul\":3778:4197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4383   */\n    tag_103:\n        /* \"#utility.yul\":4251:4328   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4241:4329   */\n      mstore\n        /* \"#utility.yul\":4348:4352   */\n      0x11\n        /* \"#utility.yul\":4345:4346   */\n      0x04\n        /* \"#utility.yul\":4338:4353   */\n      mstore\n        /* \"#utility.yul\":4372:4376   */\n      0x24\n        /* \"#utility.yul\":4369:4370   */\n      0x00\n        /* \"#utility.yul\":4362:4377   */\n      revert\n        /* \"#utility.yul\":4389:4466   */\n    tag_104:\n        /* \"#utility.yul\":4426:4433   */\n      0x00\n        /* \"#utility.yul\":4455:4460   */\n      dup2\n        /* \"#utility.yul\":4444:4460   */\n      swap1\n      pop\n        /* \"#utility.yul\":4389:4466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4472:4705   */\n    tag_40:\n        /* \"#utility.yul\":4511:4514   */\n      0x00\n        /* \"#utility.yul\":4534:4558   */\n      tag_160\n        /* \"#utility.yul\":4552:4557   */\n      dup3\n        /* \"#utility.yul\":4534:4558   */\n      tag_104\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4525:4558   */\n      swap2\n      pop\n        /* \"#utility.yul\":4580:4646   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4573:4578   */\n      dup3\n        /* \"#utility.yul\":4570:4647   */\n      sub\n        /* \"#utility.yul\":4567:4670   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":4650:4668   */\n      tag_162\n      tag_103\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4567:4670   */\n    tag_161:\n        /* \"#utility.yul\":4697:4698   */\n      0x01\n        /* \"#utility.yul\":4690:4695   */\n      dup3\n        /* \"#utility.yul\":4686:4699   */\n      add\n        /* \"#utility.yul\":4679:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4472:4705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4711:4960   */\n    tag_105:\n        /* \"#utility.yul\":4851:4885   */\n      0x4e656564206174206c6561737420322077686974656c697374656420766f7465\n        /* \"#utility.yul\":4847:4848   */\n      0x00\n        /* \"#utility.yul\":4839:4845   */\n      dup3\n        /* \"#utility.yul\":4835:4849   */\n      add\n        /* \"#utility.yul\":4828:4886   */\n      mstore\n        /* \"#utility.yul\":4920:4952   */\n      0x7220746f20737461727420612070726f706f73616c2073657373696f6e2e0000\n        /* \"#utility.yul\":4915:4917   */\n      0x20\n        /* \"#utility.yul\":4907:4913   */\n      dup3\n        /* \"#utility.yul\":4903:4918   */\n      add\n        /* \"#utility.yul\":4896:4953   */\n      mstore\n        /* \"#utility.yul\":4711:4960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4966:5332   */\n    tag_106:\n        /* \"#utility.yul\":5108:5111   */\n      0x00\n        /* \"#utility.yul\":5129:5196   */\n      tag_165\n        /* \"#utility.yul\":5193:5195   */\n      0x3e\n        /* \"#utility.yul\":5188:5191   */\n      dup4\n        /* \"#utility.yul\":5129:5196   */\n      tag_100\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5122:5196   */\n      swap2\n      pop\n        /* \"#utility.yul\":5205:5298   */\n      tag_166\n        /* \"#utility.yul\":5294:5297   */\n      dup3\n        /* \"#utility.yul\":5205:5298   */\n      tag_105\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5323:5325   */\n      0x40\n        /* \"#utility.yul\":5318:5321   */\n      dup3\n        /* \"#utility.yul\":5314:5326   */\n      add\n        /* \"#utility.yul\":5307:5326   */\n      swap1\n      pop\n        /* \"#utility.yul\":4966:5332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5338:5757   */\n    tag_52:\n        /* \"#utility.yul\":5504:5508   */\n      0x00\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"#utility.yul\":5531:5540   */\n      dup3\n        /* \"#utility.yul\":5527:5545   */\n      add\n        /* \"#utility.yul\":5519:5545   */\n      swap1\n      pop\n        /* \"#utility.yul\":5591:5600   */\n      dup2\n        /* \"#utility.yul\":5585:5589   */\n      dup2\n        /* \"#utility.yul\":5581:5601   */\n      sub\n        /* \"#utility.yul\":5577:5578   */\n      0x00\n        /* \"#utility.yul\":5566:5575   */\n      dup4\n        /* \"#utility.yul\":5562:5579   */\n      add\n        /* \"#utility.yul\":5555:5602   */\n      mstore\n        /* \"#utility.yul\":5619:5750   */\n      tag_168\n        /* \"#utility.yul\":5745:5749   */\n      dup2\n        /* \"#utility.yul\":5619:5750   */\n      tag_106\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5611:5750   */\n      swap1\n      pop\n        /* \"#utility.yul\":5338:5757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5763:5999   */\n    tag_107:\n        /* \"#utility.yul\":5903:5937   */\n      0x54686520766f746572206d7573742062652077686974656c697374656420746f\n        /* \"#utility.yul\":5899:5900   */\n      0x00\n        /* \"#utility.yul\":5891:5897   */\n      dup3\n        /* \"#utility.yul\":5887:5901   */\n      add\n        /* \"#utility.yul\":5880:5938   */\n      mstore\n        /* \"#utility.yul\":5972:5991   */\n      0x206d616b6520612070726f706f73616c2e000000000000000000000000000000\n        /* \"#utility.yul\":5967:5969   */\n      0x20\n        /* \"#utility.yul\":5959:5965   */\n      dup3\n        /* \"#utility.yul\":5955:5970   */\n      add\n        /* \"#utility.yul\":5948:5992   */\n      mstore\n        /* \"#utility.yul\":5763:5999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6005:6371   */\n    tag_108:\n        /* \"#utility.yul\":6147:6150   */\n      0x00\n        /* \"#utility.yul\":6168:6235   */\n      tag_171\n        /* \"#utility.yul\":6232:6234   */\n      0x31\n        /* \"#utility.yul\":6227:6230   */\n      dup4\n        /* \"#utility.yul\":6168:6235   */\n      tag_100\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6161:6235   */\n      swap2\n      pop\n        /* \"#utility.yul\":6244:6337   */\n      tag_172\n        /* \"#utility.yul\":6333:6336   */\n      dup3\n        /* \"#utility.yul\":6244:6337   */\n      tag_107\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6362:6364   */\n      0x40\n        /* \"#utility.yul\":6357:6360   */\n      dup3\n        /* \"#utility.yul\":6353:6365   */\n      add\n        /* \"#utility.yul\":6346:6365   */\n      swap1\n      pop\n        /* \"#utility.yul\":6005:6371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6377:6796   */\n    tag_58:\n        /* \"#utility.yul\":6543:6547   */\n      0x00\n        /* \"#utility.yul\":6581:6583   */\n      0x20\n        /* \"#utility.yul\":6570:6579   */\n      dup3\n        /* \"#utility.yul\":6566:6584   */\n      add\n        /* \"#utility.yul\":6558:6584   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6639   */\n      dup2\n        /* \"#utility.yul\":6624:6628   */\n      dup2\n        /* \"#utility.yul\":6620:6640   */\n      sub\n        /* \"#utility.yul\":6616:6617   */\n      0x00\n        /* \"#utility.yul\":6605:6614   */\n      dup4\n        /* \"#utility.yul\":6601:6618   */\n      add\n        /* \"#utility.yul\":6594:6641   */\n      mstore\n        /* \"#utility.yul\":6658:6789   */\n      tag_174\n        /* \"#utility.yul\":6784:6788   */\n      dup2\n        /* \"#utility.yul\":6658:6789   */\n      tag_108\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6650:6789   */\n      swap1\n      pop\n        /* \"#utility.yul\":6377:6796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6802:7027   */\n    tag_109:\n        /* \"#utility.yul\":6942:6976   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6938:6939   */\n      0x00\n        /* \"#utility.yul\":6930:6936   */\n      dup3\n        /* \"#utility.yul\":6926:6940   */\n      add\n        /* \"#utility.yul\":6919:6977   */\n      mstore\n        /* \"#utility.yul\":7011:7019   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7006:7008   */\n      0x20\n        /* \"#utility.yul\":6998:7004   */\n      dup3\n        /* \"#utility.yul\":6994:7009   */\n      add\n        /* \"#utility.yul\":6987:7020   */\n      mstore\n        /* \"#utility.yul\":6802:7027   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7033:7399   */\n    tag_110:\n        /* \"#utility.yul\":7175:7178   */\n      0x00\n        /* \"#utility.yul\":7196:7263   */\n      tag_177\n        /* \"#utility.yul\":7260:7262   */\n      0x26\n        /* \"#utility.yul\":7255:7258   */\n      dup4\n        /* \"#utility.yul\":7196:7263   */\n      tag_100\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7189:7263   */\n      swap2\n      pop\n        /* \"#utility.yul\":7272:7365   */\n      tag_178\n        /* \"#utility.yul\":7361:7364   */\n      dup3\n        /* \"#utility.yul\":7272:7365   */\n      tag_109\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7390:7392   */\n      0x40\n        /* \"#utility.yul\":7385:7388   */\n      dup3\n        /* \"#utility.yul\":7381:7393   */\n      add\n        /* \"#utility.yul\":7374:7393   */\n      swap1\n      pop\n        /* \"#utility.yul\":7033:7399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7405:7824   */\n    tag_66:\n        /* \"#utility.yul\":7571:7575   */\n      0x00\n        /* \"#utility.yul\":7609:7611   */\n      0x20\n        /* \"#utility.yul\":7598:7607   */\n      dup3\n        /* \"#utility.yul\":7594:7612   */\n      add\n        /* \"#utility.yul\":7586:7612   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:7667   */\n      dup2\n        /* \"#utility.yul\":7652:7656   */\n      dup2\n        /* \"#utility.yul\":7648:7668   */\n      sub\n        /* \"#utility.yul\":7644:7645   */\n      0x00\n        /* \"#utility.yul\":7633:7642   */\n      dup4\n        /* \"#utility.yul\":7629:7646   */\n      add\n        /* \"#utility.yul\":7622:7669   */\n      mstore\n        /* \"#utility.yul\":7686:7817   */\n      tag_180\n        /* \"#utility.yul\":7812:7816   */\n      dup2\n        /* \"#utility.yul\":7686:7817   */\n      tag_110\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7678:7817   */\n      swap1\n      pop\n        /* \"#utility.yul\":7405:7824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7830:8012   */\n    tag_111:\n        /* \"#utility.yul\":7970:8004   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7966:7967   */\n      0x00\n        /* \"#utility.yul\":7958:7964   */\n      dup3\n        /* \"#utility.yul\":7954:7968   */\n      add\n        /* \"#utility.yul\":7947:8005   */\n      mstore\n        /* \"#utility.yul\":7830:8012   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8018:8384   */\n    tag_112:\n        /* \"#utility.yul\":8160:8163   */\n      0x00\n        /* \"#utility.yul\":8181:8248   */\n      tag_183\n        /* \"#utility.yul\":8245:8247   */\n      0x20\n        /* \"#utility.yul\":8240:8243   */\n      dup4\n        /* \"#utility.yul\":8181:8248   */\n      tag_100\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":8174:8248   */\n      swap2\n      pop\n        /* \"#utility.yul\":8257:8350   */\n      tag_184\n        /* \"#utility.yul\":8346:8349   */\n      dup3\n        /* \"#utility.yul\":8257:8350   */\n      tag_111\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8375:8377   */\n      0x20\n        /* \"#utility.yul\":8370:8373   */\n      dup3\n        /* \"#utility.yul\":8366:8378   */\n      add\n        /* \"#utility.yul\":8359:8378   */\n      swap1\n      pop\n        /* \"#utility.yul\":8018:8384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8390:8809   */\n    tag_74:\n        /* \"#utility.yul\":8556:8560   */\n      0x00\n        /* \"#utility.yul\":8594:8596   */\n      0x20\n        /* \"#utility.yul\":8583:8592   */\n      dup3\n        /* \"#utility.yul\":8579:8597   */\n      add\n        /* \"#utility.yul\":8571:8597   */\n      swap1\n      pop\n        /* \"#utility.yul\":8643:8652   */\n      dup2\n        /* \"#utility.yul\":8637:8641   */\n      dup2\n        /* \"#utility.yul\":8633:8653   */\n      sub\n        /* \"#utility.yul\":8629:8630   */\n      0x00\n        /* \"#utility.yul\":8618:8627   */\n      dup4\n        /* \"#utility.yul\":8614:8631   */\n      add\n        /* \"#utility.yul\":8607:8654   */\n      mstore\n        /* \"#utility.yul\":8671:8802   */\n      tag_186\n        /* \"#utility.yul\":8797:8801   */\n      dup2\n        /* \"#utility.yul\":8671:8802   */\n      tag_112\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8663:8802   */\n      swap1\n      pop\n        /* \"#utility.yul\":8390:8809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8815:8995   */\n    tag_113:\n        /* \"#utility.yul\":8863:8940   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8860:8861   */\n      0x00\n        /* \"#utility.yul\":8853:8941   */\n      mstore\n        /* \"#utility.yul\":8960:8964   */\n      0x22\n        /* \"#utility.yul\":8957:8958   */\n      0x04\n        /* \"#utility.yul\":8950:8965   */\n      mstore\n        /* \"#utility.yul\":8984:8988   */\n      0x24\n        /* \"#utility.yul\":8981:8982   */\n      0x00\n        /* \"#utility.yul\":8974:8989   */\n      revert\n        /* \"#utility.yul\":9001:9321   */\n    tag_78:\n        /* \"#utility.yul\":9045:9051   */\n      0x00\n        /* \"#utility.yul\":9082:9083   */\n      0x02\n        /* \"#utility.yul\":9076:9080   */\n      dup3\n        /* \"#utility.yul\":9072:9084   */\n      div\n        /* \"#utility.yul\":9062:9084   */\n      swap1\n      pop\n        /* \"#utility.yul\":9129:9130   */\n      0x01\n        /* \"#utility.yul\":9123:9127   */\n      dup3\n        /* \"#utility.yul\":9119:9131   */\n      and\n        /* \"#utility.yul\":9150:9168   */\n      dup1\n        /* \"#utility.yul\":9140:9221   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":9206:9210   */\n      0x7f\n        /* \"#utility.yul\":9198:9204   */\n      dup3\n        /* \"#utility.yul\":9194:9211   */\n      and\n        /* \"#utility.yul\":9184:9211   */\n      swap2\n      pop\n        /* \"#utility.yul\":9140:9221   */\n    tag_189:\n        /* \"#utility.yul\":9268:9270   */\n      0x20\n        /* \"#utility.yul\":9260:9266   */\n      dup3\n        /* \"#utility.yul\":9257:9271   */\n      lt\n        /* \"#utility.yul\":9237:9255   */\n      dup2\n        /* \"#utility.yul\":9234:9272   */\n      sub\n        /* \"#utility.yul\":9231:9315   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":9287:9305   */\n      tag_191\n      tag_113\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9231:9315   */\n    tag_190:\n        /* \"#utility.yul\":9052:9321   */\n      pop\n        /* \"#utility.yul\":9001:9321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122057df2c239332d0dc5ccc23e7260c26ec130e2cfccbf99f5d34c66f2aaca3d42364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_152": {
									"entryPoint": null,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_253": {
									"entryPoint": 55,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_240": {
									"entryPoint": 63,
									"id": 240,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600060025534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610bee806101126000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b25780638e7ea5b2146100d05780639e95dd3f146100da578063f2fde38b146100f65761007d565b806343e20a1d14610082578063715018a61461009e5780637669d79e146100a8575b600080fd5b61009c60048036038101906100979190610709565b610112565b005b6100a6610250565b005b6100b0610264565b005b6100ba6102b3565b6040516100c79190610745565b60405180910390f35b6100d86102dc565b005b6100f460048036038101906100ef91906107c5565b6102de565b005b610110600480360381019061010b9190610709565b610431565b005b61011a6104b4565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019e90610895565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060026000815480929190610211906108ee565b91905055507fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd816040516102459190610745565b60405180910390a150565b6102586104b4565b6102626000610532565b565b61026c6104b4565b6001600254116102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a8906109a8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610a3a565b60405180910390fd5b604051806040016040528083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061041f9291906105fe565b50602082015181600101559050505050565b6104396104b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610acc565b60405180910390fd5b6104b181610532565b50565b6104bc6105f6565b73ffffffffffffffffffffffffffffffffffffffff166104da6102b3565b73ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790610b38565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461060a90610b87565b90600052602060002090601f01602090048101928261062c5760008555610673565b82601f1061064557805160ff1916838001178555610673565b82800160010185558215610673579182015b82811115610672578251825591602001919060010190610657565b5b5090506106809190610684565b5090565b5b8082111561069d576000816000905550600101610685565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d6826106ab565b9050919050565b6106e6816106cb565b81146106f157600080fd5b50565b600081359050610703816106dd565b92915050565b60006020828403121561071f5761071e6106a1565b5b600061072d848285016106f4565b91505092915050565b61073f816106cb565b82525050565b600060208201905061075a6000830184610736565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261078557610784610760565b5b8235905067ffffffffffffffff8111156107a2576107a1610765565b5b6020830191508360018202830111156107be576107bd61076a565b5b9250929050565b600080602083850312156107dc576107db6106a1565b5b600083013567ffffffffffffffff8111156107fa576107f96106a6565b5b6108068582860161076f565b92509250509250929050565b600082825260208201905092915050565b7f54686520766f74657220697320616c72656164792077686974656c697374656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061087f602183610812565b915061088a82610823565b604082019050919050565b600060208201905081810360008301526108ae81610872565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006108f9826108e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361092b5761092a6108b5565b5b600182019050919050565b7f4e656564206174206c6561737420322077686974656c697374656420766f746560008201527f7220746f20737461727420612070726f706f73616c2073657373696f6e2e0000602082015250565b6000610992603e83610812565b915061099d82610936565b604082019050919050565b600060208201905081810360008301526109c181610985565b9050919050565b7f54686520766f746572206d7573742062652077686974656c697374656420746f60008201527f206d616b6520612070726f706f73616c2e000000000000000000000000000000602082015250565b6000610a24603183610812565b9150610a2f826109c8565b604082019050919050565b60006020820190508181036000830152610a5381610a17565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ab6602683610812565b9150610ac182610a5a565b604082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b22602083610812565b9150610b2d82610aec565b602082019050919050565b60006020820190508181036000830152610b5181610b15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b9f57607f821691505b602082108103610bb257610bb1610b58565b5b5091905056fea264697066735822122057df2c239332d0dc5ccc23e7260c26ec130e2cfccbf99f5d34c66f2aaca3d42364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32 PUSH2 0x27 PUSH2 0x37 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBEE DUP1 PUSH2 0x112 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9E95DD3F EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x43E20A1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x7669D79E EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x2DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP1 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x211 SWAP1 PUSH2 0x8EE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD DUP2 PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x258 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x262 PUSH1 0x0 PUSH2 0x532 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x26C PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SLOAD GT PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A8 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x41F SWAP3 SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B1 DUP2 PUSH2 0x532 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x5F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DA PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x62C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x673 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x645 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x673 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x673 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x672 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x657 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x685 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D6 DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP2 EQ PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x703 DUP2 PUSH2 0x6DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP5 DUP3 DUP6 ADD PUSH2 0x6F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73F DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x75A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0x760 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A1 PUSH2 0x765 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH2 0x76A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FA JUMPI PUSH2 0x7F9 PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST PUSH2 0x806 DUP6 DUP3 DUP7 ADD PUSH2 0x76F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520766F74657220697320616C72656164792077686974656C6973746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F PUSH1 0x21 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0x88A DUP3 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8AE DUP2 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 PUSH2 0x8E4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x8B5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E656564206174206C6561737420322077686974656C697374656420766F7465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7220746F20737461727420612070726F706F73616C2073657373696F6E2E0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x992 PUSH1 0x3E DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0x99D DUP3 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C1 DUP2 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686520766F746572206D7573742062652077686974656C697374656420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D616B6520612070726F706F73616C2E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA24 PUSH1 0x31 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2F DUP3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA53 DUP2 PUSH2 0xA17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB6 PUSH1 0x26 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC1 DUP3 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE5 DUP2 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB22 PUSH1 0x20 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2D DUP3 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB51 DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB2 JUMPI PUSH2 0xBB1 PUSH2 0xB58 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xDF 0x2C 0x23 SWAP4 ORIGIN 0xD0 0xDC 0x5C 0xCC 0x23 0xE7 0x26 0xC 0x26 0xEC SGT 0xE 0x2C 0xFC 0xCB 0xF9 SWAP16 0x5D CALLVALUE 0xC6 PUSH16 0x2AACA3D42364736F6C634300080D0033 ",
							"sourceMap": "169:1840:0:-:0;;;995:1;957:39;;169:1840;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;169:1840:0;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;169:1840:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_183": {
									"entryPoint": 1204,
									"id": 183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_253": {
									"entryPoint": 1526,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_240": {
									"entryPoint": 1330,
									"id": 240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@adminStartProposalsSession_99": {
									"entryPoint": 612,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@adminWhitelist_86": {
									"entryPoint": 274,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getWinner_127": {
									"entryPoint": 732,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_169": {
									"entryPoint": 691,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_197": {
									"entryPoint": 592,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_220": {
									"entryPoint": 1073,
									"id": 220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voterProposal_123": {
									"entryPoint": 734,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9324:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:3",
														"type": ""
													}
												],
												"src": "1176:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:3",
														"type": ""
													}
												],
												"src": "1300:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1617:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1627:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1528:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1750:12:3"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1651:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1863:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1880:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1873:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1873:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1774:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1986:478:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2035:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2037:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2037:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2037:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2014:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2022:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2010:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2029:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2006:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2006:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:35:3"
															},
															"nodeType": "YulIf",
															"src": "1996:122:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2127:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2150:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2137:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2200:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "2202:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2202:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2202:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2172:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2169:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:30:3"
															},
															"nodeType": "YulIf",
															"src": "2166:117:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2292:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2308:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2316:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2304:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2292:8:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2375:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2377:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2377:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2377:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2340:8:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2354:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2362:4:3",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2350:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2350:17:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2336:32:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2370:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2333:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:41:3"
															},
															"nodeType": "YulIf",
															"src": "2330:128:3"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1953:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1961:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1969:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1979:6:3",
														"type": ""
													}
												],
												"src": "1911:553:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2556:443:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2602:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2604:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2604:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2577:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2598:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:32:3"
															},
															"nodeType": "YulIf",
															"src": "2566:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2695:297:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2710:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2741:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2752:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2724:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2724:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2714:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2802:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2804:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2804:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2804:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2774:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2782:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2771:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "2768:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2899:83:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2954:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2965:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2950:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2950:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2974:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2917:32:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:65:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2899:6:3"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2907:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2518:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2529:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2541:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2549:6:3",
														"type": ""
													}
												],
												"src": "2470:529:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3101:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3118:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3123:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3111:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3139:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3158:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3154:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3139:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3073:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3078:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3089:11:3",
														"type": ""
													}
												],
												"src": "3005:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3286:114:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3308:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3316:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3304:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3304:14:3"
																	},
																	{
																		"hexValue": "54686520766f74657220697320616c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3320:34:3",
																		"type": "",
																		"value": "The voter is already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3297:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3297:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3376:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3384:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:15:3"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3389:3:3",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3365:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3365:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3278:6:3",
														"type": ""
													}
												],
												"src": "3180:220:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3552:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3562:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3628:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3569:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3562:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3734:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540",
																	"nodeType": "YulIdentifier",
																	"src": "3645:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3645:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3645:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3747:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3758:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3763:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3747:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3540:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3548:3:3",
														"type": ""
													}
												],
												"src": "3406:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3949:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3959:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3971:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3959:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4006:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4017:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4025:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4021:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4021:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3995:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4051:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4185:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4059:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4051:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3929:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:3",
														"type": ""
													}
												],
												"src": "3778:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4248:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4241:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4345:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4348:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4338:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4338:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4372:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4362:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4362:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4203:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4434:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4444:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4455:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4444:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4416:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4426:7:3",
														"type": ""
													}
												],
												"src": "4389:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4515:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4525:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4552:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4534:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4534:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4525:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4648:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4650:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4650:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4650:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4573:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4580:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4570:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:77:3"
															},
															"nodeType": "YulIf",
															"src": "4567:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4679:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4690:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4697:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4686:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4679:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4501:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4511:3:3",
														"type": ""
													}
												],
												"src": "4472:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:143:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4839:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4847:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4835:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4835:14:3"
																	},
																	{
																		"hexValue": "4e656564206174206c6561737420322077686974656c697374656420766f7465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4851:34:3",
																		"type": "",
																		"value": "Need at least 2 whitelisted vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4828:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4907:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4915:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4903:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4903:15:3"
																	},
																	{
																		"hexValue": "7220746f20737461727420612070726f706f73616c2073657373696f6e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4920:32:3",
																		"type": "",
																		"value": "r to start a proposal session."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4809:6:3",
														"type": ""
													}
												],
												"src": "4711:249:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5188:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:3",
																		"type": "",
																		"value": "62"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5129:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5294:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678",
																	"nodeType": "YulIdentifier",
																	"src": "5205:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5205:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5205:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5307:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5318:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5307:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5100:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5108:3:3",
														"type": ""
													}
												],
												"src": "4966:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5509:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5519:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5527:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5519:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5562:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5585:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5581:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5581:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5555:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5555:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5555:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5611:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5745:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5619:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5611:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5489:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5504:4:3",
														"type": ""
													}
												],
												"src": "5338:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5869:130:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5891:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5899:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5887:14:3"
																	},
																	{
																		"hexValue": "54686520766f746572206d7573742062652077686974656c697374656420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5903:34:3",
																		"type": "",
																		"value": "The voter must be whitelisted to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5880:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5959:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5967:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5955:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5955:15:3"
																	},
																	{
																		"hexValue": "206d616b6520612070726f706f73616c2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5972:19:3",
																		"type": "",
																		"value": " make a proposal."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5948:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5948:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5861:6:3",
														"type": ""
													}
												],
												"src": "5763:236:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6151:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6161:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6227:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6232:2:3",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6168:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6161:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6333:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973",
																	"nodeType": "YulIdentifier",
																	"src": "6244:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6244:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6346:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6357:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6362:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6346:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6139:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6147:3:3",
														"type": ""
													}
												],
												"src": "6005:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6548:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6558:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6570:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6581:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6558:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6605:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6616:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6601:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6601:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6624:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6630:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6620:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6594:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6594:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6594:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6650:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6784:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6658:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6650:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6528:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6543:4:3",
														"type": ""
													}
												],
												"src": "6377:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6908:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6930:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6938:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6926:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6926:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6942:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6919:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6998:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7006:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6994:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7011:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6900:6:3",
														"type": ""
													}
												],
												"src": "6802:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7179:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7189:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7255:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7196:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7189:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7361:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7272:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7272:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7272:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7374:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7385:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7390:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7381:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7374:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7167:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7175:3:3",
														"type": ""
													}
												],
												"src": "7033:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7576:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7586:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7598:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7594:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7586:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7633:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7644:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7629:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7629:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7652:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7658:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7678:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7812:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7686:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7678:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7556:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7571:4:3",
														"type": ""
													}
												],
												"src": "7405:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7936:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7958:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7966:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7954:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7954:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7970:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7947:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7928:6:3",
														"type": ""
													}
												],
												"src": "7830:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8164:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8174:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8240:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8245:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8181:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8181:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8174:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8346:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8257:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8257:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8359:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8370:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8375:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8366:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8366:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8359:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8152:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8160:3:3",
														"type": ""
													}
												],
												"src": "8018:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8561:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8571:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8583:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8594:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8579:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8571:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8618:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8629:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8614:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8614:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8637:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8643:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8633:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8607:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8607:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8663:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8797:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8671:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8663:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8541:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8556:4:3",
														"type": ""
													}
												],
												"src": "8390:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8843:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8860:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8863:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8853:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8853:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8853:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8957:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8960:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8950:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8950:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8950:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8981:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8984:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8974:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8815:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9052:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9062:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9076:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9082:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9072:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9062:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9093:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9123:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9129:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9119:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9119:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9097:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9170:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9184:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9198:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9206:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9194:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9194:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9150:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9143:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9143:26:3"
															},
															"nodeType": "YulIf",
															"src": "9140:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9273:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9287:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9287:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9287:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9237:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9260:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9268:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9257:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9257:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9234:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:38:3"
															},
															"nodeType": "YulIf",
															"src": "9231:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9036:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9045:6:3",
														"type": ""
													}
												],
												"src": "9001:320:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540(memPtr) {\n\n        mstore(add(memPtr, 0), \"The voter is already whitelisted\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678(memPtr) {\n\n        mstore(add(memPtr, 0), \"Need at least 2 whitelisted vote\")\n\n        mstore(add(memPtr, 32), \"r to start a proposal session.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973(memPtr) {\n\n        mstore(add(memPtr, 0), \"The voter must be whitelisted to\")\n\n        mstore(add(memPtr, 32), \" make a proposal.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b25780638e7ea5b2146100d05780639e95dd3f146100da578063f2fde38b146100f65761007d565b806343e20a1d14610082578063715018a61461009e5780637669d79e146100a8575b600080fd5b61009c60048036038101906100979190610709565b610112565b005b6100a6610250565b005b6100b0610264565b005b6100ba6102b3565b6040516100c79190610745565b60405180910390f35b6100d86102dc565b005b6100f460048036038101906100ef91906107c5565b6102de565b005b610110600480360381019061010b9190610709565b610431565b005b61011a6104b4565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019e90610895565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060026000815480929190610211906108ee565b91905055507fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd816040516102459190610745565b60405180910390a150565b6102586104b4565b6102626000610532565b565b61026c6104b4565b6001600254116102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a8906109a8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610a3a565b60405180910390fd5b604051806040016040528083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061041f9291906105fe565b50602082015181600101559050505050565b6104396104b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610acc565b60405180910390fd5b6104b181610532565b50565b6104bc6105f6565b73ffffffffffffffffffffffffffffffffffffffff166104da6102b3565b73ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790610b38565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461060a90610b87565b90600052602060002090601f01602090048101928261062c5760008555610673565b82601f1061064557805160ff1916838001178555610673565b82800160010185558215610673579182015b82811115610672578251825591602001919060010190610657565b5b5090506106809190610684565b5090565b5b8082111561069d576000816000905550600101610685565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d6826106ab565b9050919050565b6106e6816106cb565b81146106f157600080fd5b50565b600081359050610703816106dd565b92915050565b60006020828403121561071f5761071e6106a1565b5b600061072d848285016106f4565b91505092915050565b61073f816106cb565b82525050565b600060208201905061075a6000830184610736565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261078557610784610760565b5b8235905067ffffffffffffffff8111156107a2576107a1610765565b5b6020830191508360018202830111156107be576107bd61076a565b5b9250929050565b600080602083850312156107dc576107db6106a1565b5b600083013567ffffffffffffffff8111156107fa576107f96106a6565b5b6108068582860161076f565b92509250509250929050565b600082825260208201905092915050565b7f54686520766f74657220697320616c72656164792077686974656c697374656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061087f602183610812565b915061088a82610823565b604082019050919050565b600060208201905081810360008301526108ae81610872565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006108f9826108e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361092b5761092a6108b5565b5b600182019050919050565b7f4e656564206174206c6561737420322077686974656c697374656420766f746560008201527f7220746f20737461727420612070726f706f73616c2073657373696f6e2e0000602082015250565b6000610992603e83610812565b915061099d82610936565b604082019050919050565b600060208201905081810360008301526109c181610985565b9050919050565b7f54686520766f746572206d7573742062652077686974656c697374656420746f60008201527f206d616b6520612070726f706f73616c2e000000000000000000000000000000602082015250565b6000610a24603183610812565b9150610a2f826109c8565b604082019050919050565b60006020820190508181036000830152610a5381610a17565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ab6602683610812565b9150610ac182610a5a565b604082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b22602083610812565b9150610b2d82610aec565b602082019050919050565b60006020820190508181036000830152610b5181610b15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b9f57607f821691505b602082108103610bb257610bb1610b58565b5b5091905056fea264697066735822122057df2c239332d0dc5ccc23e7260c26ec130e2cfccbf99f5d34c66f2aaca3d42364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9E95DD3F EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x43E20A1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x7669D79E EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0x264 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x2DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP1 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x211 SWAP1 PUSH2 0x8EE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD DUP2 PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x258 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x262 PUSH1 0x0 PUSH2 0x532 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x26C PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SLOAD GT PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A8 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x41F SWAP3 SWAP2 SWAP1 PUSH2 0x5FE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B1 DUP2 PUSH2 0x532 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x5F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4DA PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x60A SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x62C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x673 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x645 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x673 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x673 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x672 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x657 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x685 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D6 DUP3 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP2 EQ PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x703 DUP2 PUSH2 0x6DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP5 DUP3 DUP6 ADD PUSH2 0x6F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73F DUP2 PUSH2 0x6CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x75A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0x760 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A1 PUSH2 0x765 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH2 0x76A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FA JUMPI PUSH2 0x7F9 PUSH2 0x6A6 JUMP JUMPDEST JUMPDEST PUSH2 0x806 DUP6 DUP3 DUP7 ADD PUSH2 0x76F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520766F74657220697320616C72656164792077686974656C6973746564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F PUSH1 0x21 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0x88A DUP3 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8AE DUP2 PUSH2 0x872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 PUSH2 0x8E4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x8B5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E656564206174206C6561737420322077686974656C697374656420766F7465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7220746F20737461727420612070726F706F73616C2073657373696F6E2E0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x992 PUSH1 0x3E DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0x99D DUP3 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C1 DUP2 PUSH2 0x985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686520766F746572206D7573742062652077686974656C697374656420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D616B6520612070726F706F73616C2E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA24 PUSH1 0x31 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2F DUP3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA53 DUP2 PUSH2 0xA17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB6 PUSH1 0x26 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC1 DUP3 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE5 DUP2 PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB22 PUSH1 0x20 DUP4 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH2 0xB2D DUP3 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB51 DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB2 JUMPI PUSH2 0xBB1 PUSH2 0xB58 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xDF 0x2C 0x23 SWAP4 ORIGIN 0xD0 0xDC 0x5C 0xCC 0x23 0xE7 0x26 0xC 0x26 0xEC SGT 0xE 0x2C 0xFC 0xCB 0xF9 SWAP16 0x5D CALLVALUE 0xC6 PUSH16 0x2AACA3D42364736F6C634300080D0033 ",
							"sourceMap": "169:1840:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:1;;;:::i;:::-;;1398:182:0;;;:::i;:::-;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1968:38:0;;;:::i;:::-;;1592:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1061:329:0;1094:13:1;:11;:13::i;:::-;1194:14:0::1;:26;1209:10;1194:26;;;;;;;;;;;;;;;;;;;;;;;;;1193:27;1185:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1300:4;1271:14:::0;:26:::1;1286:10;1271:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1315:22;;:24;;;;;;;;;:::i;:::-;;;;;;1355:27;1371:10;1355:27;;;;;;:::i;:::-;;;;;;;;1061:329:::0;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1398:182:0:-;1094:13:1;:11;:13::i;:::-;1500:1:0::1;1475:22;;:26;1467:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;1398:182::o:0;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1968:38:0:-;:::o;1592:358::-;1683:14;:26;1698:10;1683:26;;;;;;;;;;;;;;;;;;;;;;;;;1675:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1858:25;;;;;;;;1867:12;;1858:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:1;1858:25;;;1829:14;:26;1844:10;1829:26;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1592:358;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:117::-;1637:1;1634;1627:12;1651:117;1760:1;1757;1750:12;1774:117;1883:1;1880;1873:12;1911:553;1969:8;1979:6;2029:3;2022:4;2014:6;2010:17;2006:27;1996:122;;2037:79;;:::i;:::-;1996:122;2150:6;2137:20;2127:30;;2180:18;2172:6;2169:30;2166:117;;;2202:79;;:::i;:::-;2166:117;2316:4;2308:6;2304:17;2292:29;;2370:3;2362:4;2354:6;2350:17;2340:8;2336:32;2333:41;2330:128;;;2377:79;;:::i;:::-;2330:128;1911:553;;;;;:::o;2470:529::-;2541:6;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2752:1;2741:9;2737:17;2724:31;2782:18;2774:6;2771:30;2768:117;;;2804:79;;:::i;:::-;2768:117;2917:65;2974:7;2965:6;2954:9;2950:22;2917:65;:::i;:::-;2899:83;;;;2695:297;2470:529;;;;;:::o;3005:169::-;3089:11;3123:6;3118:3;3111:19;3163:4;3158:3;3154:14;3139:29;;3005:169;;;;:::o;3180:220::-;3320:34;3316:1;3308:6;3304:14;3297:58;3389:3;3384:2;3376:6;3372:15;3365:28;3180:220;:::o;3406:366::-;3548:3;3569:67;3633:2;3628:3;3569:67;:::i;:::-;3562:74;;3645:93;3734:3;3645:93;:::i;:::-;3763:2;3758:3;3754:12;3747:19;;3406:366;;;:::o;3778:419::-;3944:4;3982:2;3971:9;3967:18;3959:26;;4031:9;4025:4;4021:20;4017:1;4006:9;4002:17;3995:47;4059:131;4185:4;4059:131;:::i;:::-;4051:139;;3778:419;;;:::o;4203:180::-;4251:77;4248:1;4241:88;4348:4;4345:1;4338:15;4372:4;4369:1;4362:15;4389:77;4426:7;4455:5;4444:16;;4389:77;;;:::o;4472:233::-;4511:3;4534:24;4552:5;4534:24;:::i;:::-;4525:33;;4580:66;4573:5;4570:77;4567:103;;4650:18;;:::i;:::-;4567:103;4697:1;4690:5;4686:13;4679:20;;4472:233;;;:::o;4711:249::-;4851:34;4847:1;4839:6;4835:14;4828:58;4920:32;4915:2;4907:6;4903:15;4896:57;4711:249;:::o;4966:366::-;5108:3;5129:67;5193:2;5188:3;5129:67;:::i;:::-;5122:74;;5205:93;5294:3;5205:93;:::i;:::-;5323:2;5318:3;5314:12;5307:19;;4966:366;;;:::o;5338:419::-;5504:4;5542:2;5531:9;5527:18;5519:26;;5591:9;5585:4;5581:20;5577:1;5566:9;5562:17;5555:47;5619:131;5745:4;5619:131;:::i;:::-;5611:139;;5338:419;;;:::o;5763:236::-;5903:34;5899:1;5891:6;5887:14;5880:58;5972:19;5967:2;5959:6;5955:15;5948:44;5763:236;:::o;6005:366::-;6147:3;6168:67;6232:2;6227:3;6168:67;:::i;:::-;6161:74;;6244:93;6333:3;6244:93;:::i;:::-;6362:2;6357:3;6353:12;6346:19;;6005:366;;;:::o;6377:419::-;6543:4;6581:2;6570:9;6566:18;6558:26;;6630:9;6624:4;6620:20;6616:1;6605:9;6601:17;6594:47;6658:131;6784:4;6658:131;:::i;:::-;6650:139;;6377:419;;;:::o;6802:225::-;6942:34;6938:1;6930:6;6926:14;6919:58;7011:8;7006:2;6998:6;6994:15;6987:33;6802:225;:::o;7033:366::-;7175:3;7196:67;7260:2;7255:3;7196:67;:::i;:::-;7189:74;;7272:93;7361:3;7272:93;:::i;:::-;7390:2;7385:3;7381:12;7374:19;;7033:366;;;:::o;7405:419::-;7571:4;7609:2;7598:9;7594:18;7586:26;;7658:9;7652:4;7648:20;7644:1;7633:9;7629:17;7622:47;7686:131;7812:4;7686:131;:::i;:::-;7678:139;;7405:419;;;:::o;7830:182::-;7970:34;7966:1;7958:6;7954:14;7947:58;7830:182;:::o;8018:366::-;8160:3;8181:67;8245:2;8240:3;8181:67;:::i;:::-;8174:74;;8257:93;8346:3;8257:93;:::i;:::-;8375:2;8370:3;8366:12;8359:19;;8018:366;;;:::o;8390:419::-;8556:4;8594:2;8583:9;8579:18;8571:26;;8643:9;8637:4;8633:20;8629:1;8618:9;8614:17;8607:47;8671:131;8797:4;8671:131;:::i;:::-;8663:139;;8390:419;;;:::o;8815:180::-;8863:77;8860:1;8853:88;8960:4;8957:1;8950:15;8984:4;8981:1;8974:15;9001:320;9045:6;9082:1;9076:4;9072:12;9062:22;;9129:1;9123:4;9119:12;9150:18;9140:81;;9206:4;9198:6;9194:17;9184:27;;9140:81;9268:2;9260:6;9257:14;9237:18;9234:38;9231:84;;9287:18;;:::i;:::-;9231:84;9052:269;9001:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "610800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"adminStartProposalsSession()": "4883",
								"adminWhitelist(address)": "infinite",
								"getWinner()": "166",
								"owner()": "2522",
								"renounceOwnership()": "30421",
								"transferOwnership(address)": "30810",
								"voterProposal(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 995,
									"end": 996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 957,
									"end": 996,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 957,
									"end": 996,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2009,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057df2c239332d0dc5ccc23e7260c26ec130e2cfccbf99f5d34c66f2aaca3d42364736f6c634300080d0033",
									".code": [
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "8E7EA5B2"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "9E95DD3F"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "43E20A1D"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "7669D79E"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 2009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1194,
											"end": 1220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1185,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1271,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1315,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "B6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD"
										},
										{
											"begin": 1371,
											"end": 1381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1382,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1390,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1501,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1467,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1580,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1708,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1683,
											"end": 1709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1675,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1843,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1854,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1950,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1528,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1768,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1651,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1891,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1774,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 1885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2033,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1996,
											"end": 2118,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2118,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1996,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2157,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2199,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2283,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2166,
											"end": 2283,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2202,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2202,
											"end": 2281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2281,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2202,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2166,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2321,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2368,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2374,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2458,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2330,
											"end": 2458,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2377,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2458,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2330,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2464,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2596,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2755,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2771,
											"end": 2801,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2768,
											"end": 2885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2804,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2804,
											"end": 2883,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2804,
											"end": 2883,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2804,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2768,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2974,
											"end": 2981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2950,
											"end": 2972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2917,
											"end": 2982,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2917,
											"end": 2982,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2917,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2982,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2982,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2999,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3118,
											"end": 3121,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3139,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3139,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3174,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3180,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3180,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3320,
											"end": 3354,
											"name": "PUSH",
											"source": 3,
											"value": "54686520766F74657220697320616C72656164792077686974656C6973746564"
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "PUSH",
											"source": 3,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3393,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3400,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3406,
											"end": 3772,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3406,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3628,
											"end": 3631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3569,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3569,
											"end": 3636,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3636,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3569,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3734,
											"end": 3737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3645,
											"end": 3738,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3738,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3645,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3772,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3772,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3772,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3778,
											"end": 4197,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3778,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3944,
											"end": 3948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 3985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4021,
											"end": 4041,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4015,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4059,
											"end": 4190,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4190,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4059,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 4197,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 4197,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 4197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 4197,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4203,
											"end": 4383,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4203,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4328,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4352,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4466,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4389,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4466,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4472,
											"end": 4705,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4552,
											"end": 4557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4525,
											"end": 4558,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4525,
											"end": 4558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4646,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4647,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4567,
											"end": 4670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4670,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4567,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4690,
											"end": 4695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4705,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4711,
											"end": 4960,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4711,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4885,
											"name": "PUSH",
											"source": 3,
											"value": "4E656564206174206C6561737420322077686974656C697374656420766F7465"
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "PUSH",
											"source": 3,
											"value": "7220746F20737461727420612070726F706F73616C2073657373696F6E2E0000"
										},
										{
											"begin": 4915,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4907,
											"end": 4913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4960,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4966,
											"end": 5332,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4966,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 3,
											"value": "3E"
										},
										{
											"begin": 5188,
											"end": 5191,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5122,
											"end": 5196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5122,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5205,
											"end": 5298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5298,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5205,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5318,
											"end": 5321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5307,
											"end": 5326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5307,
											"end": 5326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 5332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 5332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 5332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 5332,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5338,
											"end": 5757,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5338,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5601,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5562,
											"end": 5579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5745,
											"end": 5749,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5619,
											"end": 5750,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5619,
											"end": 5750,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5619,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5757,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5757,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5757,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5763,
											"end": 5999,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5763,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5903,
											"end": 5937,
											"name": "PUSH",
											"source": 3,
											"value": "54686520766F746572206D7573742062652077686974656C697374656420746F"
										},
										{
											"begin": 5899,
											"end": 5900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5887,
											"end": 5901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5880,
											"end": 5938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5972,
											"end": 5991,
											"name": "PUSH",
											"source": 3,
											"value": "206D616B6520612070726F706F73616C2E000000000000000000000000000000"
										},
										{
											"begin": 5967,
											"end": 5969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 5970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 5992,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5763,
											"end": 5999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5763,
											"end": 5999,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6005,
											"end": 6371,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 6005,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "PUSH",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6168,
											"end": 6235,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6168,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6168,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6244,
											"end": 6337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6337,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6244,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6005,
											"end": 6371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6005,
											"end": 6371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6005,
											"end": 6371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6005,
											"end": 6371,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6543,
											"end": 6547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6630,
											"end": 6639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6620,
											"end": 6640,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 6641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6658,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6796,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6802,
											"end": 7027,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6802,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6976,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6938,
											"end": 6939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6919,
											"end": 6977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7019,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7006,
											"end": 7008,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6998,
											"end": 7004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7020,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 7027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 7027,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7033,
											"end": 7399,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7033,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7175,
											"end": 7178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7196,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7255,
											"end": 7258,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7196,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7196,
											"end": 7263,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7196,
											"end": 7263,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7196,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7263,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7272,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7361,
											"end": 7364,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7272,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7272,
											"end": 7365,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7272,
											"end": 7365,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7272,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7385,
											"end": 7388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7399,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7405,
											"end": 7824,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 7405,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7571,
											"end": 7575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7586,
											"end": 7612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7652,
											"end": 7656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7648,
											"end": 7668,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7642,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7669,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7686,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7812,
											"end": 7816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7686,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7686,
											"end": 7817,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7686,
											"end": 7817,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7686,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7678,
											"end": 7817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7678,
											"end": 7817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7824,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7824,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7824,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7830,
											"end": 8012,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 7830,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 8004,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7966,
											"end": 7967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7954,
											"end": 7968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7947,
											"end": 8005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7830,
											"end": 8012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7830,
											"end": 8012,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8018,
											"end": 8384,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 8018,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8160,
											"end": 8163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8245,
											"end": 8247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8243,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8181,
											"end": 8248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8181,
											"end": 8248,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 8181,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 8346,
											"end": 8349,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 8257,
											"end": 8350,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8257,
											"end": 8350,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 8257,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8375,
											"end": 8377,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8370,
											"end": 8373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8018,
											"end": 8384,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8390,
											"end": 8809,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8390,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8556,
											"end": 8560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8596,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8583,
											"end": 8592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8633,
											"end": 8653,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8614,
											"end": 8631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8607,
											"end": 8654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8671,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 8797,
											"end": 8801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8671,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 8671,
											"end": 8802,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8671,
											"end": 8802,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 8671,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8663,
											"end": 8802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8663,
											"end": 8802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8809,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8809,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8815,
											"end": 8995,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 8815,
											"end": 8995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8863,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8853,
											"end": 8941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8960,
											"end": 8964,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 8957,
											"end": 8958,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8950,
											"end": 8965,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8984,
											"end": 8988,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8981,
											"end": 8982,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 8989,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9001,
											"end": 9321,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 9001,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9082,
											"end": 9083,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9076,
											"end": 9080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9084,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9129,
											"end": 9130,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9123,
											"end": 9127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9119,
											"end": 9131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9140,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 9140,
											"end": 9221,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9206,
											"end": 9210,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 9198,
											"end": 9204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9194,
											"end": 9211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9140,
											"end": 9221,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 9140,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9268,
											"end": 9270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9260,
											"end": 9266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9257,
											"end": 9271,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9234,
											"end": 9272,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9231,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 9231,
											"end": 9315,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9231,
											"end": 9315,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 9231,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9001,
											"end": 9321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9001,
											"end": 9321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9001,
											"end": 9321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9001,
											"end": 9321,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"adminStartProposalsSession()": "7669d79e",
							"adminWhitelist(address)": "43e20a1d",
							"getWinner()": "8e7ea5b2",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"voterProposal(string)": "9e95dd3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum voting.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum voting.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminStartProposalsSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrVoter\",\"type\":\"address\"}],\"name\":\"adminWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"voterProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/voting-system/voting.sol\":\"voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/voting-system/voting.sol\":{\"keccak256\":\"0x26f6f4da4b3f96df37f9955689757094dbae05329da3c5ea44ae306b551679e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28a20c9e43113727ba7805e7b52e7b24208273b119a0ab33886384f657387103\",\"dweb:/ipfs/QmejSSGMWYB7SNLPciSCeV3aSS6ALftiRWdi5EKHx7Dt6S\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 136,
								"contract": "contracts/voting-system/voting.sol:voting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 49,
								"contract": "contracts/voting-system/voting.sol:voting",
								"label": "voterWhitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 52,
								"contract": "contracts/voting-system/voting.sol:voting",
								"label": "_voterWhitelistedCount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 57,
								"contract": "contracts/voting-system/voting.sol:voting",
								"label": "voterProposals",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Proposal)45_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Proposal)45_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct voting.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)45_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)45_storage": {
								"encoding": "inplace",
								"label": "struct voting.Proposal",
								"members": [
									{
										"astId": 42,
										"contract": "contracts/voting-system/voting.sol:voting",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 44,
										"contract": "contracts/voting-system/voting.sol:voting",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 136,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/voting-system/voting.sol:52:5:\n   |\n52 |     function adminStartProposalsSession() external onlyOwner{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1580,
					"file": "contracts/voting-system/voting.sol",
					"start": 1398
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/voting-system/voting.sol": {
				"ast": {
					"absolutePath": "contracts/voting-system/voting.sol",
					"exportedSymbols": {
						"Context": [
							263
						],
						"Ownable": [
							241
						],
						"voting": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 129,
							"sourceUnit": 242,
							"src": "60:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 241,
										"src": "188:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "188:7:0"
								}
							],
							"canonicalName": "voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128,
								241,
								263
							],
							"name": "voting",
							"nameLocation": "178:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd",
									"id": 8,
									"name": "VoterRegistered",
									"nameLocation": "255:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": false,
												"mutability": "mutable",
												"name": "voterAddress",
												"nameLocation": "279:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "271:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:22:0"
									},
									"src": "249:44:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f",
									"id": 16,
									"name": "WorkflowStatusChange",
									"nameLocation": "306:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousStatus",
												"nameLocation": "342:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "327:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$33",
													"typeString": "enum voting.WorkflowStatus"
												},
												"typeName": {
													"id": 10,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 9,
														"name": "WorkflowStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 33,
														"src": "327:14:0"
													},
													"referencedDeclaration": 33,
													"src": "327:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$33",
														"typeString": "enum voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStatus",
												"nameLocation": "373:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "358:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$33",
													"typeString": "enum voting.WorkflowStatus"
												},
												"typeName": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "WorkflowStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 33,
														"src": "358:14:0"
													},
													"referencedDeclaration": 33,
													"src": "358:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$33",
														"typeString": "enum voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:57:0"
									},
									"src": "300:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f",
									"id": 20,
									"name": "ProposalRegistered",
									"nameLocation": "396:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "420:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:17:0"
									},
									"src": "390:42:0"
								},
								{
									"anonymous": false,
									"eventSelector": "4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca4",
									"id": 26,
									"name": "Voted",
									"nameLocation": "444:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "459:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "471:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:32:0"
									},
									"src": "438:45:0"
								},
								{
									"canonicalName": "voting.WorkflowStatus",
									"id": 33,
									"members": [
										{
											"id": 27,
											"name": "RegisteringVoters",
											"nameLocation": "522:17:0",
											"nodeType": "EnumValue",
											"src": "522:17:0"
										},
										{
											"id": 28,
											"name": "ProposalsRegistrationStarted",
											"nameLocation": "550:28:0",
											"nodeType": "EnumValue",
											"src": "550:28:0"
										},
										{
											"id": 29,
											"name": "ProposalsRegistrationEnded",
											"nameLocation": "589:26:0",
											"nodeType": "EnumValue",
											"src": "589:26:0"
										},
										{
											"id": 30,
											"name": "VotingSessionStarted",
											"nameLocation": "626:20:0",
											"nodeType": "EnumValue",
											"src": "626:20:0"
										},
										{
											"id": 31,
											"name": "VotingSessionEnded",
											"nameLocation": "657:18:0",
											"nodeType": "EnumValue",
											"src": "657:18:0"
										},
										{
											"id": 32,
											"name": "VotesTallied",
											"nameLocation": "686:12:0",
											"nodeType": "EnumValue",
											"src": "686:12:0"
										}
									],
									"name": "WorkflowStatus",
									"nameLocation": "496:14:0",
									"nodeType": "EnumDefinition",
									"src": "491:214:0"
								},
								{
									"canonicalName": "voting.Voter",
									"id": 40,
									"members": [
										{
											"constant": false,
											"id": 35,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "742:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "737:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 34,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "737:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "hasVoted",
											"nameLocation": "770:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "765:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 36,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "765:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "votedProposalId",
											"nameLocation": "794:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "789:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "789:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "720:5:0",
									"nodeType": "StructDefinition",
									"scope": 128,
									"src": "713:104:0",
									"visibility": "public"
								},
								{
									"canonicalName": "voting.Proposal",
									"id": 45,
									"members": [
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "859:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 45,
											"src": "852:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 41,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "852:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 44,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "886:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 45,
											"src": "881:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 43,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "881:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "832:8:0",
									"nodeType": "StructDefinition",
									"scope": 128,
									"src": "825:78:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "voterWhitelist",
									"nameLocation": "936:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "911:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 48,
										"keyType": {
											"id": 46,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "919:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "911:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 47,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "930:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_voterWhitelistedCount",
									"nameLocation": "970:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "957:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "957:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 51,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "995:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 57,
									"mutability": "mutable",
									"name": "voterProposals",
									"nameLocation": "1034:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "1005:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Proposal_$45_storage_$",
										"typeString": "mapping(address => struct voting.Proposal)"
									},
									"typeName": {
										"id": 56,
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1013:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1005:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Proposal_$45_storage_$",
											"typeString": "mapping(address => struct voting.Proposal)"
										},
										"valueType": {
											"id": 55,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 54,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1024:8:0"
											},
											"referencedDeclaration": 45,
											"src": "1024:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$45_storage_ptr",
												"typeString": "struct voting.Proposal"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1123:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1193:27:0",
															"subExpression": {
																"baseExpression": {
																	"id": 65,
																	"name": "voterWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1194:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 67,
																"indexExpression": {
																	"id": 66,
																	"name": "_addrVoter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1209:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1194:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220697320616c72656164792077686974656c69737465642e",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1222:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540",
																"typeString": "literal_string \"The voter is already whitelisted.\""
															},
															"value": "The voter is already whitelisted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f787ddfb8dc5307fda19c29b69c8f9e2517209b8561c2d19dd15b38490bf540",
																"typeString": "literal_string \"The voter is already whitelisted.\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1185:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1185:73:0"
											},
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 72,
															"name": "voterWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1271:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 74,
														"indexExpression": {
															"id": 73,
															"name": "_addrVoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1286:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1271:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1300:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1271:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1271:33:0"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1315:24:0",
													"subExpression": {
														"id": 78,
														"name": "_voterWhitelistedCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1315:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1315:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 82,
															"name": "_addrVoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1371:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 81,
														"name": "VoterRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1355:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "EmitStatement",
												"src": "1350:32:0"
											}
										]
									},
									"functionSelector": "43e20a1d",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 160,
												"src": "1114:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1114:9:0"
										}
									],
									"name": "adminWhitelist",
									"nameLocation": "1070:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_addrVoter",
												"nameLocation": "1093:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1085:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:20:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:0:0"
									},
									"scope": 128,
									"src": "1061:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1454:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "_voterWhitelistedCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "1475:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1500:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1475:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e656564206174206c6561737420322077686974656c697374656420766f74657220746f20737461727420612070726f706f73616c2073657373696f6e2e",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1503:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678",
																"typeString": "literal_string \"Need at least 2 whitelisted voter to start a proposal session.\""
															},
															"value": "Need at least 2 whitelisted voter to start a proposal session."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7abc94141e34ba59b42cde1263ae4c289cc18f0c7368c2c12cb83244814d678",
																"typeString": "literal_string \"Need at least 2 whitelisted voter to start a proposal session.\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:101:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1467:101:0"
											}
										]
									},
									"functionSelector": "7669d79e",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 89,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 160,
												"src": "1445:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1445:9:0"
										}
									],
									"name": "adminStartProposalsSession",
									"nameLocation": "1407:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1433:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:0:0"
									},
									"scope": 128,
									"src": "1398:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1654:296:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 105,
																"name": "voterWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1683:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 108,
															"indexExpression": {
																"expression": {
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1698:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1698:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1683:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f746572206d7573742062652077686974656c697374656420746f206d616b6520612070726f706f73616c2e",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1711:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973",
																"typeString": "literal_string \"The voter must be whitelisted to make a proposal.\""
															},
															"value": "The voter must be whitelisted to make a proposal."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1acacc73c1bcdfbcf3542ecd7ec912f19c59d5ae2a2449f4041f2aca10293973",
																"typeString": "literal_string \"The voter must be whitelisted to make a proposal.\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1675:88:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 112,
															"name": "voterProposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1829:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Proposal_$45_storage_$",
																"typeString": "mapping(address => struct voting.Proposal storage ref)"
															}
														},
														"id": 115,
														"indexExpression": {
															"expression": {
																"id": 113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1844:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1844:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1829:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$45_storage",
															"typeString": "struct voting.Proposal storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 117,
																"name": "_description",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1867:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																}
															},
															{
																"hexValue": "30",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1881:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_calldata_ptr",
																	"typeString": "string calldata"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 116,
															"name": "Proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "1858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Proposal_$45_storage_ptr_$",
																"typeString": "type(struct voting.Proposal storage pointer)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1858:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$45_memory_ptr",
															"typeString": "struct voting.Proposal memory"
														}
													},
													"src": "1829:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$45_storage",
														"typeString": "struct voting.Proposal storage ref"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1829:54:0"
											}
										]
									},
									"functionSelector": "9e95dd3f",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "voterProposal",
									"nameLocation": "1601:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_description",
												"nameLocation": "1631:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1615:28:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:30:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:0:0"
									},
									"scope": 128,
									"src": "1592:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1996:10:0",
										"statements": []
									},
									"functionSelector": "8e7ea5b2",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinner",
									"nameLocation": "1977:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:2:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:0:0"
									},
									"scope": 128,
									"src": "1968:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 129,
							"src": "169:1840:0",
							"usedErrors": []
						}
					],
					"src": "33:1976:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							263
						],
						"Ownable": [
							241
						]
					},
					"id": 242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 242,
							"sourceUnit": 264,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 133,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 263,
										"src": "683:7:1"
									},
									"id": 134,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241,
								263
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 142,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 147,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 146,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 152,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 241,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 155,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 158,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 160,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 241,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 174,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 176,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 241,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1885:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "1895:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:1"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 160,
												"src": "1875:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:1"
									},
									"scope": 241,
									"src": "1831:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2151:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 206,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2169:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2263:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 215,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2244:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 202,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 160,
												"src": "2141:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2108:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:1"
									},
									"scope": 241,
									"src": "2081:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2496:124:1",
										"statements": [
											{
												"assignments": [
													227
												],
												"declarations": [
													{
														"constant": false,
														"id": 227,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 239,
														"src": "2506:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 226,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"id": 228,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:1"
											},
											{
												"expression": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 230,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "2541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 231,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "2550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 235,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "2594:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "2604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2573:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "EmitStatement",
												"src": "2568:45:1"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2461:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 241,
									"src": "2433:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 242,
							"src": "654:1968:1",
							"usedErrors": []
						}
					],
					"src": "102:2521:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							263
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 249,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 248,
												"id": 251,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 263,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 258,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 257,
												"id": 260,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 263,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 264,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}